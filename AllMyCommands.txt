
Salma@Salma-PC MINGW64 ~
$ cd ~/Desktop/

Salma@Salma-PC MINGW64 ~/Desktop
$ git clone https://github.com/NadineAbdelaziz/Nadine-Repo.git
Cloning into 'Nadine-Repo'...
remote: Counting objects: 3, done.
remote: Total 3 (delta 0), reused 0 (delta 0), pack-reused 0
Unpacking objects: 100% (3/3), done.

Salma@Salma-PC MINGW64 ~/Desktop
$ cd Nadine-Repo

Salma@Salma-PC MINGW64 ~/Desktop/Nadine-Repo (master)
$ ls
README.md

Salma@Salma-PC MINGW64 ~/Desktop/Nadine-Repo (master)
$ git remote-v
git: 'remote-v' is not a git command. See 'git --help'.

The most similar command is
        remote-fd

Salma@Salma-PC MINGW64 ~/Desktop/Nadine-Repo (master)
$ git remote add originhttps://github.com/NadineAbdelaziz/Nadine-Repo.git
usage: git remote add [<options>] <name> <url>

    -f, --fetch           fetch the remote branches
    --tags                import all tags and associated objects when fetching
                          or do not fetch any tag at all (--no-tags)
    -t, --track <branch>  branch(es) to track
    -m, --master <branch>
                          master branch
    --mirror[=<push|fetch>]
                          set up remote as a mirror to push to or fetch from


Salma@Salma-PC MINGW64 ~/Desktop/Nadine-Repo (master)
$ ls
README.md

Salma@Salma-PC MINGW64 ~/Desktop/Nadine-Repo (master)
$ touch First file.md

Salma@Salma-PC MINGW64 ~/Desktop/Nadine-Repo (master)
$ ls
file.md  First  README.md

Salma@Salma-PC MINGW64 ~/Desktop/Nadine-Repo (master)
$ touch Second file

Salma@Salma-PC MINGW64 ~/Desktop/Nadine-Repo (master)
$ ls
file  file.md  First  README.md  Second

Salma@Salma-PC MINGW64 ~/Desktop/Nadine-Repo (master)
$ ls

Salma@Salma-PC MINGW64 ~/Desktop/Nadine-Repo (master)
$ touch First file.md

Salma@Salma-PC MINGW64 ~/Desktop/Nadine-Repo (master)
$ ls
file.md  First

Salma@Salma-PC MINGW64 ~/Desktop/Nadine-Repo (master)
$ touch Second file.md

Salma@Salma-PC MINGW64 ~/Desktop/Nadine-Repo (master)
$ ls
file.md  First  Second

Salma@Salma-PC MINGW64 ~/Desktop/Nadine-Repo (master)
$ touch Thirdfile.md

Salma@Salma-PC MINGW64 ~/Desktop/Nadine-Repo (master)
$ ls
file.md  First  Second  Thirdfile.md

Salma@Salma-PC MINGW64 ~/Desktop/Nadine-Repo (master)
$ touch Firstfile.md

Salma@Salma-PC MINGW64 ~/Desktop/Nadine-Repo (master)
$ ls
Firstfile.md  Thirdfile.md

Salma@Salma-PC MINGW64 ~/Desktop/Nadine-Repo (master)
$ touch Secondfile.md

Salma@Salma-PC MINGW64 ~/Desktop/Nadine-Repo (master)
$ ls
Firstfile.md  Secondfile.md  Thirdfile.md

Salma@Salma-PC MINGW64 ~/Desktop/Nadine-Repo (master)
$ git status
On branch master
Your branch is up to date with 'origin/master'.

Changes not staged for commit:
  (use "git add/rm <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

        deleted:    README.md

Untracked files:
  (use "git add <file>..." to include in what will be committed)

        Firstfile.md
        Secondfile.md
        Thirdfile.md

no changes added to commit (use "git add" and/or "git commit -a")

Salma@Salma-PC MINGW64 ~/Desktop/Nadine-Repo (master)
$ git add/rm README.md
warning: failed to restrict file handles (2)

handle #0: 0000000000000408 (type 3, handle info (1) 7fff
handle #1: 000000000000040c (type 3, handle info (1) 1

This is a bug; please report it at
https://github.com/git-for-windows/git/issues/new

To suppress this warning, please set the environment variable

        SUPPRESS_HANDLE_INHERITANCE_WARNING=1

git: 'add/rm' is not a git command. See 'git --help'.

Salma@Salma-PC MINGW64 ~/Desktop/Nadine-Repo (master)
$ add README.md
bash: add: command not found

Salma@Salma-PC MINGW64 ~/Desktop/Nadine-Repo (master)
$ touch  AllMyCommands.txt

Salma@Salma-PC MINGW64 ~/Desktop/Nadine-Repo (master)
$ ls
AllMyCommands.txt  Firstfile.md  Secondfile.md  Thirdfile.md

Salma@Salma-PC MINGW64 ~/Desktop/Nadine-Repo (master)
$ search README.md
bash: search: command not found

Salma@Salma-PC MINGW64 ~/Desktop/Nadine-Repo (master)
$ git status
On branch master
Your branch is up to date with 'origin/master'.

Changes not staged for commit:
  (use "git add/rm <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

        deleted:    README.md

Untracked files:
  (use "git add <file>..." to include in what will be committed)

        AllMyCommands.txt
        Firstfile.md
        Secondfile.md
        Thirdfile.md

no changes added to commit (use "git add" and/or "git commit -a")

Salma@Salma-PC MINGW64 ~/Desktop/Nadine-Repo (master)
$ git add.README.md
git: 'add.README.md' is not a git command. See 'git --help'.

Salma@Salma-PC MINGW64 ~/Desktop/Nadine-Repo (master)
$ git status
On branch master
Your branch is up to date with 'origin/master'.

Changes not staged for commit:
  (use "git add/rm <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

        deleted:    README.md

Untracked files:
  (use "git add <file>..." to include in what will be committed)

        AllMyCommands.txt
        Firstfile.md
        Secondfile.md
        Thirdfile.md

no changes added to commit (use "git add" and/or "git commit -a")

Salma@Salma-PC MINGW64 ~/Desktop/Nadine-Repo (master)
$ git status
On branch master
Your branch is up to date with 'origin/master'.

Changes not staged for commit:
  (use "git add/rm <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

        deleted:    README.md

Untracked files:
  (use "git add <file>..." to include in what will be committed)

        AllMyCommands.txt
        Firstfile.md
        Secondfile.md
        Thirdfile.md

no changes added to commit (use "git add" and/or "git commit -a")

Salma@Salma-PC MINGW64 ~/Desktop/Nadine-Repo (master)
$ git add/rm <README.md>
bash: syntax error near unexpected token `newline'

Salma@Salma-PC MINGW64 ~/Desktop/Nadine-Repo (master)
$ git log
commit 6c1325f7e4dec26d95c4cdcae2cfbaecd226b847 (HEAD -> master, origin/master, origin/HEAD)
Author: NadineAbdelaziz <36333744+NadineAbdelaziz@users.noreply.github.com>
Date:   Sat Feb 10 17:38:03 2018 +0200

    Initial commit

Salma@Salma-PC MINGW64 ~/Desktop/Nadine-Repo (master)
$ git checkout HEAD <README.md>
bash: syntax error near unexpected token `newline'

Salma@Salma-PC MINGW64 ~/Desktop/Nadine-Repo (master)
$ git checkout README.md

Salma@Salma-PC MINGW64 ~/Desktop/Nadine-Repo (master)
$ git status
On branch master
Your branch is up to date with 'origin/master'.

Untracked files:
  (use "git add <file>..." to include in what will be committed)

        AllMyCommands.txt
        Firstfile.md
        Secondfile.md
        Thirdfile.md

nothing added to commit but untracked files present (use "git add" to track)

Salma@Salma-PC MINGW64 ~/Desktop/Nadine-Repo (master)
$ git status
On branch master
Your branch is up to date with 'origin/master'.

Untracked files:
  (use "git add <file>..." to include in what will be committed)

        AllMyCommands.txt
        Backup of Secondfile.wbk
        Firstfile.md
        Secondfile.md
        Thirdfile.md

nothing added to commit but untracked files present (use "git add" to track)

Salma@Salma-PC MINGW64 ~/Desktop/Nadine-Repo (master)
$ git status
On branch master
Your branch is up to date with 'origin/master'.

Untracked files:
  (use "git add <file>..." to include in what will be committed)

        AllMyCommands.txt
        Firstfile.md
        Secondfile.md
        Thirdfile.md

nothing added to commit but untracked files present (use "git add" to track)

Salma@Salma-PC MINGW64 ~/Desktop/Nadine-Repo (master)
$ git add
Nothing specified, nothing added.
Maybe you wanted to say 'git add .'?

Salma@Salma-PC MINGW64 ~/Desktop/Nadine-Repo (master)
$ git add.Firstfile.md
git: 'add.Firstfile.md' is not a git command. See 'git --help'.

Salma@Salma-PC MINGW64 ~/Desktop/Nadine-Repo (master)
$ git add Firstfile.md

Salma@Salma-PC MINGW64 ~/Desktop/Nadine-Repo (master)
$ ^C

Salma@Salma-PC MINGW64 ~/Desktop/Nadine-Repo (master)
$ git add SecondFile.md

Salma@Salma-PC MINGW64 ~/Desktop/Nadine-Repo (master)
$ git add Thirdfie.md
fatal: pathspec 'Thirdfie.md' did not match any files

Salma@Salma-PC MINGW64 ~/Desktop/Nadine-Repo (master)
$ git add Thirdfile.md

Salma@Salma-PC MINGW64 ~/Desktop/Nadine-Repo (master)
$ git add AllMyCommands.txt

Salma@Salma-PC MINGW64 ~/Desktop/Nadine-Repo (master)
$ git status
On branch master
Your branch is up to date with 'origin/master'.

Changes to be committed:
  (use "git reset HEAD <file>..." to unstage)

        new file:   AllMyCommands.txt
        new file:   Firstfile.md
        new file:   Thirdfile.md

Untracked files:
  (use "git add <file>..." to include in what will be committed)

        Secondfile.md


Salma@Salma-PC MINGW64 ~/Desktop/Nadine-Repo (master)
$ git add Secondfile.md

Salma@Salma-PC MINGW64 ~/Desktop/Nadine-Repo (master)
$ git status
On branch master
Your branch is up to date with 'origin/master'.

Changes to be committed:
  (use "git reset HEAD <file>..." to unstage)

        new file:   AllMyCommands.txt
        new file:   Firstfile.md
        new file:   Secondfile.md
        new file:   Thirdfile.md


Salma@Salma-PC MINGW64 ~/Desktop/Nadine-Repo (master)
$ git add *.md

Salma@Salma-PC MINGW64 ~/Desktop/Nadine-Repo (master)
$ git status
On branch master
Your branch is up to date with 'origin/master'.

Changes to be committed:
  (use "git reset HEAD <file>..." to unstage)

        new file:   AllMyCommands.txt
        new file:   Firstfile.md
        new file:   Secondfile.md
        new file:   Thirdfile.md


Salma@Salma-PC MINGW64 ~/Desktop/Nadine-Repo (master)
$ git status
On branch master
Your branch is up to date with 'origin/master'.

Changes to be committed:
  (use "git reset HEAD <file>..." to unstage)

        new file:   AllMyCommands.txt
        new file:   Firstfile.md
        new file:   Secondfile.md
        new file:   Thirdfile.md

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

        modified:   Firstfile.md


Salma@Salma-PC MINGW64 ~/Desktop/Nadine-Repo (master)
$ git status
On branch master
Your branch is up to date with 'origin/master'.

Changes to be committed:
  (use "git reset HEAD <file>..." to unstage)

        new file:   AllMyCommands.txt
        new file:   Firstfile.md
        new file:   Secondfile.md
        new file:   Thirdfile.md


Salma@Salma-PC MINGW64 ~/Desktop/Nadine-Repo (master)
$ ^C

Salma@Salma-PC MINGW64 ~/Desktop/Nadine-Repo (master)
$ ^C

Salma@Salma-PC MINGW64 ~/Desktop/Nadine-Repo (master)
$ git status
On branch master
Your branch is up to date with 'origin/master'.

Changes to be committed:
  (use "git reset HEAD <file>..." to unstage)

        new file:   AllMyCommands.txt
        new file:   Firstfile.md
        new file:   Secondfile.md
        new file:   Thirdfile.md

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

        modified:   Thirdfile.md

Untracked files:
  (use "git add <file>..." to include in what will be committed)

        ~$README.md
        ~$irdfile.md


Salma@Salma-PC MINGW64 ~/Desktop/Nadine-Repo (master)
$ git commit-m " I added the text 5.1 Distributed Git - Distributed Workflows in the third file "
git: 'commit-m' is not a git command. See 'git --help'.

The most similar command is
        commit-tree

Salma@Salma-PC MINGW64 ~/Desktop/Nadine-Repo (master)
$ git add *.md

Salma@Salma-PC MINGW64 ~/Desktop/Nadine-Repo (master)
$ git status
On branch master
Your branch is up to date with 'origin/master'.

Changes to be committed:
  (use "git reset HEAD <file>..." to unstage)

        new file:   AllMyCommands.txt
        new file:   Firstfile.md
        new file:   Secondfile.md
        new file:   Thirdfile.md
        new file:   ~$README.md
        new file:   ~$irdfile.md


Salma@Salma-PC MINGW64 ~/Desktop/Nadine-Repo (master)

Salma@Salma-PC MINGW64 ~
$ cd ~/Desktop/

Salma@Salma-PC MINGW64 ~/Desktop
$ cd Nadine-Repo

Salma@Salma-PC MINGW64 ~/Desktop/Nadine-Repo (master)
$ git status
On branch master
Your branch is up to date with 'origin/master'.

Changes to be committed:
  (use "git reset HEAD <file>..." to unstage)

        new file:   AllMyCommands.txt
        new file:   Firstfile.md
        new file:   Secondfile.md
        new file:   Thirdfile.md
        new file:   ~$README.md
        new file:   ~$irdfile.md

Changes not staged for commit:
  (use "git add/rm <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

        deleted:    ~$README.md
        deleted:    ~$irdfile.md


Salma@Salma-PC MINGW64 ~/Desktop/Nadine-Repo (master)
$ git remote add https://github.com/NadineAbdelaziz/Nadine-Repo.git
usage: git remote add [<options>] <name> <url>

    -f, --fetch           fetch the remote branches
    --tags                import all tags and associated objects when fetchi
                          or do not fetch any tag at all (--no-tags)
    -t, --track <branch>  branch(es) to track
    -m, --master <branch>
                          master branch
    --mirror[=<push|fetch>]
                          set up remote as a mirror to push to or fetch from


Salma@Salma-PC MINGW64 ~/Desktop/Nadine-Repo (master)
$ git remote
origin

Salma@Salma-PC MINGW64 ~/Desktop/Nadine-Repo (master)
$ git push -u origin master



Logon failed, use ctrl+c to cancel basic credential prompt.
Username for 'https://github.com': remote: Anonymous access to NadineAbdelazadine-Repo.git denied.
fatal: Authentication failed for 'https://github.com/NadineAbdelaziz/Nadine-.git/'

Salma@Salma-PC MINGW64 ~/Desktop/Nadine-Repo (master)
$

Salma@Salma-PC MINGW64 ~/Desktop/Nadine-Repo (master)
$

Salma@Salma-PC MINGW64 ~/Desktop/Nadine-Repo (master)
$ ^C

Salma@Salma-PC MINGW64 ~/Desktop/Nadine-Repo (master)
$ git remote add Nadine $ git add origin https://github.com/NadineAbdelaziz/Nadine-Repo.git
usage: git remote add [<options>] <name> <url>

    -f, --fetch           fetch the remote branches
    --tags                import all tags and associated objects when fetching
                          or do not fetch any tag at all (--no-tags)
    -t, --track <branch>  branch(es) to track
    -m, --master <branch>
                          master branch
    --mirror[=<push|fetch>]
                          set up remote as a mirror to push to or fetch from


Salma@Salma-PC MINGW64 ~/Desktop/Nadine-Repo (master)
$ git remote
origin

Salma@Salma-PC MINGW64 ~/Desktop/Nadine-Repo (master)
$ git push -u Nadine master
fatal: 'Nadine' does not appear to be a git repository
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.

Salma@Salma-PC MINGW64 ~/Desktop/Nadine-Repo (master)
$ git remote add gitHubNadine https://github.com/NadineAbdelaziz/Nadine-Repo.git

Salma@Salma-PC MINGW64 ~/Desktop/Nadine-Repo (master)
$ git remote
gitHubNadine
origin

Salma@Salma-PC MINGW64 ~/Desktop/Nadine-Repo (master)
$ git push -u gitHubNadine master

Everything up-to-date
Branch 'master' set up to track remote branch 'master' from 'gitHubNadine'.

Salma@Salma-PC MINGW64 ~/Desktop/Nadine-Repo (master)
$

Salma@Salma-PC MINGW64 ~/Desktop/Nadine-Repo (master)
$

Salma@Salma-PC MINGW64 ~/Desktop/Nadine-Repo (master)
$ git push origin master
Everything up-to-date

Salma@Salma-PC MINGW64 ~/Desktop/Nadine-Repo (master)
$ git fetch origin master
From https://github.com/NadineAbdelaziz/Nadine-Repo
 * branch            master     -> FETCH_HEAD

Salma@Salma-PC MINGW64 ~/Desktop/Nadine-Repo (master)
$ git merge origin master
Already up to date.

Salma@Salma-PC MINGW64 ~/Desktop/Nadine-Repo (master)
$ git push -u origin master
Everything up-to-date
Branch 'master' set up to track remote branch 'master' from 'origin'.

Salma@Salma-PC MINGW64 ~/Desktop/Nadine-Repo (master)
$ git fetch origin master:tmp
From https://github.com/NadineAbdelaziz/Nadine-Repo
 * [new branch]      master     -> tmp

Salma@Salma-PC MINGW64 ~/Desktop/Nadine-Repo (master)
$ git rebase tmp
Cannot rebase: You have unstaged changes.
Additionally, your index contains uncommitted changes.
Please commit or stash them.

Salma@Salma-PC MINGW64 ~/Desktop/Nadine-Repo (master)
$ git status
On branch master
Your branch is up to date with 'origin/master'.

Changes to be committed:
  (use "git reset HEAD <file>..." to unstage)

        new file:   AllMyCommands.txt
        new file:   Firstfile.md
        new file:   Secondfile.md
        new file:   Thirdfile.md
        new file:   ~$README.md
        new file:   ~$irdfile.md

Changes not staged for commit:
  (use "git add/rm <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

        deleted:    ~$README.md
        deleted:    ~$irdfile.md


Salma@Salma-PC MINGW64 ~/Desktop/Nadine-Repo (master)
$ git commmit -m " Delete $README.md and $irdfile.md as they are mistakes"
git: 'commmit' is not a git command. See 'git --help'.

The most similar command is
        commit

Salma@Salma-PC MINGW64 ~/Desktop/Nadine-Repo (master)
$ ^C

Salma@Salma-PC MINGW64 ~/Desktop/Nadine-Repo (master)
$ git commit -m " Delete $README.md and $irdfile.md as they are mistakes"
[master 6090863]  Delete .md and .md as they are mistakes
 6 files changed, 14 insertions(+)
 create mode 100644 AllMyCommands.txt
 create mode 100644 Firstfile.md
 create mode 100644 Secondfile.md
 create mode 100644 Thirdfile.md
 create mode 100644 ~$README.md
 create mode 100644 ~$irdfile.md

Salma@Salma-PC MINGW64 ~/Desktop/Nadine-Repo (master)
$ git status
On branch master
Your branch is ahead of 'origin/master' by 1 commit.
  (use "git push" to publish your local commits)

Changes not staged for commit:
  (use "git add/rm <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

        deleted:    ~$README.md
        deleted:    ~$irdfile.md

no changes added to commit (use "git add" and/or "git commit -a")

Salma@Salma-PC MINGW64 ~/Desktop/Nadine-Repo (master)
$ git push -u origin master
Counting objects: 8, done.
Delta compression using up to 4 threads.
Compressing objects: 100% (7/7), done.
Writing objects: 100% (8/8), 8.26 KiB | 1.65 MiB/s, done.
Total 8 (delta 0), reused 0 (delta 0)
To https://github.com/NadineAbdelaziz/Nadine-Repo.git
   6c1325f..6090863  master -> master
Branch 'master' set up to track remote branch 'master' from 'origin'.

Salma@Salma-PC MINGW64 ~/Desktop/Nadine-Repo (master)
$


